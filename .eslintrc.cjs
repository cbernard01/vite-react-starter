module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    "standard",
    "eslint:recommended",
    "plugin:tailwindcss/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "prettier",
  ],
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint", "react-refresh"],
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
  },
  rules: {
    "react-refresh/only-export-components": ["warn", { allowConstantExport: true }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-this-alias": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/semi": ["error", "always"],
    "consistent-return": "warn",
    "no-var": "warn",
    "no-trailing-spaces": "error",
    "prefer-spread": "off",
    "no-case-declarations": "off",
    "no-unreachable": "warn",
    "import/extensions": "off",
    semi: ["error", "always"],
    indent: ["error", 2, { SwitchCase: 1 }],
    eqeqeq: "warn",
    quotes: ["error", "double", { avoidEscape: true, allowTemplateLiterals: true }],
    "no-console": "warn",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        multiline: {
          delimiter: "semi",
          requireLast: true,
        },
        singleline: {
          delimiter: "semi",
          requireLast: false,
        },
      },
    ],
    "max-len": ["error", { code: 180, ignoreComments: true, ignoreStrings: true }],
  },
};